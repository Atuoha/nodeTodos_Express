'use strict';const {Passport}=require("passport/lib"),express=require("express"),app=express(),router=express.Router(),bcrypt=require("bcryptjs"),passport=require("passport"),LocalStrategy=require("passport-local"),User=require("../../models/User");router.all("/*",(a,b,d)=>{a.app.locals.layout="home";d()});router.get("/",(a,b)=>{b.render("home")});router.get("/signin",(a,b)=>{b.render("home/login")});router.get("/signup",(a,b)=>{b.render("home/register")});
router.post("/signup",(a,b)=>{User.findOne({email:a.body.email}).then(d=>{if(d)a.flash("error_msg","User exists with email!"),b.redirect("back");else{const c=new User;c.email=a.body.email;c.fullname=a.body.fullname;c.password=a.body.password;"tony@gmail.com"==a.body.email&&(c.role="Admin");bcrypt.genSalt(10,(e,f)=>{bcrypt.hash(a.body.password,f,(g,k)=>{g&&console.log(g);c.password=k;c.save().then(h=>{a.flash("success_msg","Account registered. Login now!");b.redirect("/signin")}).catch(h=>console.log(h))})})}})});
passport.use(new LocalStrategy({usernameField:"email"},(a,b,d)=>{User.findOne({email:a}).then(c=>{if(c)bcrypt.compare(b,c.password,(e,f)=>{e&&console.log(e);return f?(console.log(`logged in as ${c.email} -> ${c.role}`),d(null,c)):d(null,!1,{message:"Password mismatch. Try again!"})});else return d(null,!1,{message:"Email not recognised!"})}).catch(c=>console.log(c))}));passport.serializeUser(function(a,b){b(null,a.id)});passport.deserializeUser(function(a,b){User.findById(a,function(d,c){b(d,c)})});
router.post("/signin",(a,b,d)=>{passport.authenticate("local",{successRedirect:"/admin",failureRedirect:"/signin",failureFlash:!0})(a,b,d)});router.get("/logout",(a,b)=>{a.logout();b.redirect("/")});module.exports=router;