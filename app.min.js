'use strict';const express=require("express"),app=express(),PORT=process.env.PORT||4111,mongoose=require("mongoose"),path=require("path"),upload=require("express-fileupload"),handlebars=require("express-handlebars"),Handlebars=require("handlebars"),{allowInsecurePrototypeAccess}=require("@handlebars/allow-prototype-access"),bodyParser=require("body-parser"),flash=require("connect-flash"),session=require("express-session"),passport=require("passport"),methodOverride=require("method-override"),{mongodbURL}=
require("./config/config");mongoose.set("useFindAndModify",!1);mongoose.Promise=global.Promise;mongoose.set("useCreateIndex",!0);mongoose.connect(mongodbURL,{useNewUrlParser:!0,useUnifiedTopology:!0}).then(a=>{console.log("Database connected")}).catch(a=>console.log(a));app.use(express.static(path.join(__dirname,"public")));const {select,generate_date,ifeq,paginate}=require("./helpers/handlebars-helpers");
app.engine("handlebars",handlebars({defaultLayout:"home",helpers:{select,generate_date,ifeq,paginate},partialsDir:path.join(__dirname,"views/layouts/partials"),handlebars:allowInsecurePrototypeAccess(Handlebars)}));app.set("view engine","handlebars");app.use(bodyParser.json());app.use(bodyParser.urlencoded({extended:!0}));app.use(flash());app.use(upload());app.use(methodOverride("_method"));app.use(session({secret:"tonyAtuoha",resave:!0,saveUninitialized:!0}));app.use(passport.initialize());app.use(passport.session());
app.use((a,b,c)=>{b.locals.success_msg=a.flash("success_msg");b.locals.error_msg=a.flash("error_msg");b.locals.error=a.flash("error");b.locals.loggedUser=a.user;c()});const home=require("./routes/home/index");app.use("/",home);const admin=require("./routes/admin/index");app.use("/admin",admin);const todos=require("./routes/admin/todo");app.use("/admin/todos",todos);const profile=require("./routes/admin/profile");app.use("/admin/profile",profile);const adminusers=require("./routes/admin/users");
app.use("/admin/users",adminusers);app.listen(PORT,()=>{console.log(`Listening to port ${PORT}`)});